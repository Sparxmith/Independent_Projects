# TIL:

## BASH

### Using `tee` and process substitution   
You can use tee and process substitution to get different outputs between `stdout` and a file:
```
cat file.txt | tee >(pbcopy) | grep errors
```
This will send all the output of cat file.txt to pbcopy, and you'll only get the result of grep on your console.

### Printing the first line of a file and a file name to a `.csv`   
Given a folder of documents dated `YYYY-MM-DD.csv`, if you want the header row and the file name in a new file, you can use the following command:
```
for f in *.csv; do <"$f" echo "$(head -n1 $f),$f" >> heads.csv; done
```

This works by using character expansion.

If you only want to get a particular month:
```
for f in 2018-08*; do <"$f" echo "$(head -n1 $f),$f" >> AugustHeads.csv; done
```
